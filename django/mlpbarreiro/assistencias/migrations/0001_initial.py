# Generated by Django 2.0.2 on 2018-04-04 06:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assistencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topico', models.CharField(max_length=350)),
                ('descricao', models.TextField(max_length=1000)),
                ('orcamento', models.TextField(blank=True, max_length=1000, null=True)),
                ('data', models.DateTimeField(auto_now_add=True)),
                ('custo', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('valor', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('foto', models.FileField(blank=True, null=True, upload_to='photos/')),
                ('estado', models.IntegerField(blank=True, choices=[(21, 'Não aceite o orçamento'), (23, 'Facturado'), (34, 'Creditado ao cliente'), (33, 'Não reparado em armazem'), (31, 'Reparado em armazem'), (24, 'Sem avaria'), (20, 'Sem reparação'), (26, 'Garantia resolvido'), (27, 'Cliente resolveu'), (28, 'Resolvido comprou nova'), (18, 'Enviado para reciclagem'), (29, 'anulado'), (8, 'Aguardar contacto do cliente'), (14, 'Não pago'), (36, 'Facturado e Pago'), (30, 'Supostamente Resolvido'), (23, 'Facturado'), (2, 'Em resolução')], null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Funcionario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pessoa',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telefone', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Numero não é válido', regex='\\d{9,15}$')])),
                ('telemovel', models.IntegerField(blank=True, null=True, validators=[django.core.validators.RegexValidator(message='Numero não é válido', regex='\\d{9,15}$')])),
                ('nome', models.CharField(blank=True, max_length=150, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('morada', models.CharField(blank=True, max_length=250, null=True)),
                ('localidade', models.CharField(blank=True, max_length=150, null=True)),
                ('codigo_postal', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cliente',
            fields=[
                ('pessoa_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='assistencias.Pessoa')),
            ],
            bases=('assistencias.pessoa',),
        ),
        migrations.AddField(
            model_name='assistencia',
            name='funcionario',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='assistencias.Funcionario'),
        ),
        migrations.AddField(
            model_name='cliente',
            name='assistencias',
            field=models.ManyToManyField(related_name='assistencia', to='assistencias.Assistencia'),
        ),
        migrations.AddField(
            model_name='assistencia',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cliente', to='assistencias.Cliente'),
        ),
    ]
